using System.Data;
using System.Windows.Forms;
using Common.Database;
using TPM3.Sys;
using Common;
using C1.Win.C1FlexGrid;
using Z1.tpm.DB;

namespace TPM3.wx
{
    /// <summary>
    /// 纠错性更动说明
    /// </summary>
    public partial class RegressModifyControl2 : UserControl
    {
        public static ColumnPropList columnList1 = FlexGridAssist.GetColumnPropList<RegressModifyControl2>(3);
        static string sqlTable = "select * from [HG软件更动表] where 测试版本 = ? and 更动类型 = ? order by 序号";
        FlexGridAssist flexAssist;
        DataTable dtTable;
        string modifyType = "纠错性更动";

        public RegressModifyControl2()
        {
            InitializeComponent();
            FlexGridAssist.SetFlexGridWithFocus(flex1);
            flex1.AllowDragging = AllowDraggingEnum.Columns;
            flex1.Styles.Normal.WordWrap = true;

            flexAssist = new FlexGridAssist(flex1, "ID", "序号") { doubleClickEdit = true, deleteClear = true, columnList = columnList1 };
        }

        static RegressModifyControl2()
        {
            columnList1.Add("序号", 40);
            columnList1.Add("问题单标识", 100, false, "问题标识");
            columnList1.Add("问题单名称", 100, false, "问题名称");
            columnList1.Add("是否更动", 65);
            columnList1.Add("更动标识", 150);
            columnList1.Add("更动说明", 260);
            columnList1.Add("未更动说明", 200);
        }

        public bool OnPageCreate()
        {
            dtTable = dbProject.ExecuteDataTable(sqlTable, currentvid, modifyType);
            dtTable.Columns["项目ID"].DefaultValue = pid;
            dtTable.Columns["测试版本"].DefaultValue = currentvid;
            dtTable.Columns["是否更动"].DefaultValue = true;
            dtTable.Columns["更动类型"].DefaultValue = modifyType;

            const string sqlFallList = "SELECT * FROM CA问题报告单 WHERE 测试版本 = ? order by 所属被测对象ID, 同标识序号 ";
            object previd = DBLayer1.GetPreVersion(dbProject, currentvid);
            DataTable dtFall = dbProject.ExecuteDataTable(sqlFallList, previd);
            string splitter = CommonDB.GetPblSpl(dbProject, (string)pid, (string)previd);

            // 依次加入所有的问题单
            int index = 1000000;
            foreach(DataRow drFall in dtFall.Rows)
            {
                object fid = drFall["ID"];
                DataRow drModify = GridAssist.GetDataRow(dtTable, "问题单ID", fid);
                if(drModify != null) continue;  // 已经被加入更动表
                drModify = dtTable.NewRow();
                drModify["ID"] = FunctionClass.NewGuid;
                drModify["序号"] = index++;
                drModify["问题单ID"] = fid;
                drModify["问题单名称"] = drFall["名称"];
                drModify["问题单标识"] = CommonDB.GenPblSignForStep(dbProject, splitter, fid.ToString());
                dtTable.Rows.Add(drModify);
            }
            GridAssist.SetDataTableIndex(dtTable, "序号");

            flexAssist.DataSource = dtTable;
            flexAssist.OnPageCreate();

            FlexGridAssist.AutoSizeRows(flex1, 2);
            return true;
        }

        public bool OnPageClose()
        {
            flexAssist.OnPageClose();
            dbProject.UpdateDatabase(dtTable, sqlTable);
            return true;
        }

        public static DBAccess dbProject
        {
            get { return globalData.dbProject; }
        }

        public static GlobalData globalData
        {
            get { return GlobalData.globalData; }
        }

        public static object pid
        {
            get { return globalData.projectID; }
        }

        public static object currentvid
        {
            get { return globalData.currentvid; }
        }
    }
}