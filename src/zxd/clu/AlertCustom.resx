<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.CaptionImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAA+FJREFUOE8lkmtM
        mwUUhk+7MVCTJfpD3Q9FYzRTgzPT6Ni4TxlMLkIcoEyRgRdUnGMQTMwYDMtgjHEZu6EZGy2XSqVAS2mh
        LTQtpbRFA4NyEyajFQj0+3oTx5x7/dCTPDm/zpP35Byecmjp8T0Btav99mO8p7dPvv6o/8LRJzbNr67e
        PSCbeyTxGgIe8vEe3Cfi8WnHwzuJzwcRwKf/6wEtj+bD2/sStvqS4ejsmi0OzvF4rHce3LQKz58TD65T
        u9ZOP3HI9UvUY3GTzOwhmcXHk1t9RNrBqW2MOvI/CbOUAMbzEZjVdLATSXCJQ2BuPJ+h7BsnjdpKt+Ri
        Mg2aqN/kIJX+NikGfiMydrRkL16M+mdL4pxPhdOVCcb9MZg7qXCZYrB6JfgPnVTxmk5jpumuRhrVasli
        GqOxpipSV5cS1X15eNxS/AZc7ZzAzMV3pIFh08GspICdioNbvR/2H6LtQzL5yxPydjIPDJPJPEu/NteT
        uu4sUdHJE5KajL1YuXQArPJtOCeTuRXeB7OWCvZ2AthfouHu3oe1a1Hr8+1nBFOqqz/atMJ5242STHV9
        lR+JOkZezD6SqFKdDIJbFAGn/jCYmUQws3FgR6LByiPgkoRxScLhtYTiT+sh3OuOwXRZEjrLz0hIY3VR
        SZX0YOE7z286avfDJY8Co3sLjCICrDgUrCoSroUkuDc+wcZ6PpiBE7DUZkFYkIbmmmo1qYzLT97sWfDP
        TjkypCsMgqcpDExTCJgWbng0FqwvG76/i+GaEcDc8DlqcmMhyArH9ZI8qUqmfZZ6DfanRIoFXmmlMP56
        xm4wF4LBijjBWDzcvhz4Vksx11UA8en3UJEbiXM54bhZebpLaVjYphq+Q6TQ259pVjr8aqoanpPkvnmf
        adgHdiAG3rEM2PuOQ1KUDnlFFmQVaZCUpKxLLpY3t12p52vGPDQ47tkSLAWKFL9vb7rRHTpWtAfepnA4
        W5Nhrv0QdV8lQZAdD2VZ5l/q2nxRd6cmsKOxkcSXLpDBdpeGbBtEyiHHLqHKQcLyb2v78naj/1QMrh5P
        xAexIRAWf4FFYSFklwV5PzeKSDE4Q10tYhocWdwa5hkmvHxSj6w8JpJP8z+LD235JmEvLn+djOSQYAQH
        vQBZWTqmJGe9vZrxXR2t3STfemndLTLO3CPDpJfPsYO7giOwTTmzMzLqXeunMWFo4ATCUzkrgtK6gtJj
        0akd0oFXOoZZ6jSuUa9ulgwTHi6+j4MT2Lz+1KNf9GtTzfkVfFcvyE1KsDRU1rW3VpcFN7UP0/dZh6hT
        qiap0UlS/TJpLKtknPKR0ebdgs8R8C9p1nZ9FzQcoAAAAABJRU5ErkJggg==
</value>
  </data>
</root>